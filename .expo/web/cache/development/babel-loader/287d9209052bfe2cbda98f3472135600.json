{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar firebase = _interopRequireWildcard(require(\"firebase\"));\n\nvar _jsxFileName = \"E:\\\\projects\\\\videoApp\\\\screens\\\\LoadingScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar LoadingScreen = function (_React$Component) {\n  (0, _inherits2.default)(LoadingScreen, _React$Component);\n\n  var _super = _createSuper(LoadingScreen);\n\n  function LoadingScreen() {\n    (0, _classCallCheck2.default)(this, LoadingScreen);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(LoadingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        _this.props.navigation.navigate(user ? \"App\" : \"Auth\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, \"Loading...\"), _react.default.createElement(_reactNative.ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return LoadingScreen;\n}(_react.default.Component);\n\nexports.default = LoadingScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["E:/projects/videoApp/screens/LoadingScreen.js"],"names":["LoadingScreen","firebase","auth","onAuthStateChanged","user","props","navigation","navigate","styles","container","React","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;IAEqBA,a;;;;;;;;;;;;wCACC;AAAA;;AAClBC,MAAAA,QAAQ,CAACC,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACzC,QAAA,KAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+BH,IAAI,GAAG,KAAH,GAAW,MAA9C;AACD,OAFD;AAGD;;;6BACQ;AACP,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,6BAAC,8BAAD;AAAmB,QAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;EAbwCC,eAAMC,S;;;;AAgBjD,IAAMH,MAAM,GAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, ActivityIndicator } from \"react-native\";\r\nimport * as firebase from \"firebase\";\r\n\r\nexport default class LoadingScreen extends React.Component {\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.props.navigation.navigate(user ? \"App\" : \"Auth\");\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text>Loading...</Text>\r\n        <ActivityIndicator size=\"large\"></ActivityIndicator>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}