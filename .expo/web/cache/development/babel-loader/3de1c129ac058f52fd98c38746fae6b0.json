{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TextTrackType\", {\n  enumerable: true,\n  get: function get() {\n    return _TextTrackType.default;\n  }\n});\nObject.defineProperty(exports, \"FilterType\", {\n  enumerable: true,\n  get: function get() {\n    return _FilterType.default;\n  }\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _resolveAssetSource = _interopRequireDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));\n\nvar _TextTrackType = _interopRequireDefault(require(\"./TextTrackType\"));\n\nvar _FilterType = _interopRequireDefault(require(\"./FilterType\"));\n\nvar _VideoResizeMode = _interopRequireDefault(require(\"./VideoResizeMode.js\"));\n\nvar _jsxFileName = \"E:\\\\projects\\\\videoApp\\\\Video.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar styles = _reactNative.StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\n\nvar Video = function (_Component) {\n  (0, _inherits2.default)(Video, _Component);\n\n  var _super = _createSuper(Video);\n\n  function Video(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Video);\n    _this = _super.call(this, props);\n\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n\n      if (isNaN(time)) {\n        throw new Error('Specified time is not a number');\n      }\n\n      if (_reactNative.Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n\n    _this.save = function _callee(options) {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_reactNative.NativeModules.VideoManager.save(options, (0, _reactNative.findNodeHandle)(_this._root)));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.restoreUserInterfaceForPictureInPictureStopCompleted = function (restored) {\n      _this.setNativeProps({\n        restoreUserInterfaceForPIPStopCompletionHandler: restored\n      });\n    };\n\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n\n    _this._hidePoster = function () {\n      if (_this.state.showPoster) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n    };\n\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n\n    _this._onLoad = function (event) {\n      if (_reactNative.Platform.OS === 'windows') {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n\n    _this._onBandwidthUpdate = function (event) {\n      if (_this.props.onBandwidthUpdate) {\n        _this.props.onBandwidthUpdate(event.nativeEvent);\n      }\n    };\n\n    _this._onSeek = function (event) {\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      _reactNative.Platform.OS === 'android' && _this.setState({\n        androidFullScreen: true\n      });\n\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      _reactNative.Platform.OS === 'android' && _this.setState({\n        androidFullScreen: false\n      });\n\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onReadyForDisplay = function (event) {\n      if (!_this.props.audioOnly) {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n\n    _this._onExternalPlaybackChange = function (event) {\n      if (_this.props.onExternalPlaybackChange) {\n        _this.props.onExternalPlaybackChange(event.nativeEvent);\n      }\n    };\n\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n\n    _this._onPictureInPictureStatusChanged = function (event) {\n      if (_this.props.onPictureInPictureStatusChanged) {\n        _this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onRestoreUserInterfaceForPictureInPictureStop = function (event) {\n      if (_this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n        _this.props.onRestoreUserInterfaceForPictureInPictureStop();\n      }\n    };\n\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n\n    _this.getViewManagerConfig = function (viewManagerName) {\n      if (!_reactNative.NativeModules.UIManager.getViewManagerConfig) {\n        return _reactNative.NativeModules.UIManager[viewManagerName];\n      }\n\n      return _reactNative.NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n    };\n\n    _this.state = {\n      showPoster: !!props.poster,\n      androidFullScreen: false,\n      videoContainerLayout_x: 0,\n      videoContainerLayout_y: 0\n    };\n\n    _this.getDimension();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(Video, [{\n    key: \"getDimension\",\n    value: function getDimension() {\n      if (_reactNative.Dimensions.get('window').width < _reactNative.Dimensions.get('window').height) {\n        this.width = Math.round(_reactNative.Dimensions.get('window').height);\n        this.height = Math.round(_reactNative.Dimensions.get('window').width);\n      } else {\n        this.width = Math.round(_reactNative.Dimensions.get('window').width);\n        this.height = Math.round(_reactNative.Dimensions.get('window').height);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      _reactNative.UIManager.measure((0, _reactNative.findNodeHandle)(this._videoContainer), function (x, y) {\n        _this2.setState({\n          videoContainerLayout_x: x,\n          videoContainerLayout_y: y\n        });\n      });\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case 'object':\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n\n        case 'undefined':\n          return '';\n\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this3 = this;\n\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this3.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var resizeMode = this.props.resizeMode;\n      var source = (0, _resolveAssetSource.default)(this.props.source) || {};\n      var shouldCache = !source.__packager_asset;\n      var uri = source.uri || '';\n\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n\n      if (!uri) {\n        console.warn('Trying to load empty source.');\n      }\n\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n      var RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n      if (resizeMode === _VideoResizeMode.default.stretch) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n      } else if (resizeMode === _VideoResizeMode.default.contain) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n      } else if (resizeMode === _VideoResizeMode.default.cover) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n      }\n\n      var nativeProps = (0, _extends2.default)({}, this.props);\n      (0, _extends2.default)(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          shouldCache: shouldCache,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onVideoBandwidthUpdate: this._onBandwidthUpdate,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n        onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop\n      });\n\n      var posterStyle = _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n        resizeMode: this.props.posterResizeMode || 'contain'\n      });\n\n      var videoStyle = this.state.androidFullScreen ? {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: this.width,\n        height: this.height,\n        backgroundColor: '#ffffff',\n        justifyContent: 'center',\n        zIndex: 99999,\n        marginTop: -1 * (this.state.videoContainerLayout_y ? parseFloat(this.state.videoContainerLayout_y) : 0),\n        marginLeft: -1 * (this.state.videoContainerLayout_x ? parseFloat(this.state.videoContainerLayout_x) : 0)\n      } : {};\n      return _react.default.createElement(_reactNative.View, {\n        ref: function ref(videoContainer) {\n          _this4._videoContainer = videoContainer;\n          return videoContainer;\n        },\n        style: [nativeProps.style, videoStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(RCTVideo, (0, _extends2.default)({\n        ref: this._assignRoot\n      }, nativeProps, {\n        style: _reactNative.StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }\n      })), this.state.showPoster && _react.default.createElement(_reactNative.Image, {\n        style: posterStyle,\n        source: {\n          uri: this.props.poster\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n  return Video;\n}(_react.Component);\n\nexports.default = Video;\nVideo.propTypes = _objectSpread({\n  filter: _propTypes.default.oneOf([_FilterType.default.NONE, _FilterType.default.INVERT, _FilterType.default.MONOCHROME, _FilterType.default.POSTERIZE, _FilterType.default.FALSE, _FilterType.default.MAXIMUMCOMPONENT, _FilterType.default.MINIMUMCOMPONENT, _FilterType.default.CHROME, _FilterType.default.FADE, _FilterType.default.INSTANT, _FilterType.default.MONO, _FilterType.default.NOIR, _FilterType.default.PROCESS, _FilterType.default.TONAL, _FilterType.default.TRANSFER, _FilterType.default.SEPIA]),\n  filterEnabled: _propTypes.default.bool,\n  src: _propTypes.default.object,\n  seek: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),\n  fullscreen: _propTypes.default.bool,\n  onVideoLoadStart: _propTypes.default.func,\n  onVideoLoad: _propTypes.default.func,\n  onVideoBuffer: _propTypes.default.func,\n  onVideoError: _propTypes.default.func,\n  onVideoProgress: _propTypes.default.func,\n  onVideoBandwidthUpdate: _propTypes.default.func,\n  onVideoSeek: _propTypes.default.func,\n  onVideoEnd: _propTypes.default.func,\n  onTimedMetadata: _propTypes.default.func,\n  onVideoAudioBecomingNoisy: _propTypes.default.func,\n  onVideoExternalPlaybackChange: _propTypes.default.func,\n  onVideoFullscreenPlayerWillPresent: _propTypes.default.func,\n  onVideoFullscreenPlayerDidPresent: _propTypes.default.func,\n  onVideoFullscreenPlayerWillDismiss: _propTypes.default.func,\n  onVideoFullscreenPlayerDidDismiss: _propTypes.default.func,\n  source: _propTypes.default.oneOfType([_propTypes.default.shape({\n    uri: _propTypes.default.string\n  }), _propTypes.default.number]),\n  minLoadRetryCount: _propTypes.default.number,\n  maxBitRate: _propTypes.default.number,\n  resizeMode: _propTypes.default.string,\n  poster: _propTypes.default.string,\n  posterResizeMode: _reactNative.Image.propTypes.resizeMode,\n  repeat: _propTypes.default.bool,\n  automaticallyWaitsToMinimizeStalling: _propTypes.default.bool,\n  allowsExternalPlayback: _propTypes.default.bool,\n  selectedAudioTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  selectedVideoTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  selectedTextTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  textTracks: _propTypes.default.arrayOf(_propTypes.default.shape({\n    title: _propTypes.default.string,\n    uri: _propTypes.default.string.isRequired,\n    type: _propTypes.default.oneOf([_TextTrackType.default.SRT, _TextTrackType.default.TTML, _TextTrackType.default.VTT]),\n    language: _propTypes.default.string.isRequired\n  })),\n  paused: _propTypes.default.bool,\n  muted: _propTypes.default.bool,\n  volume: _propTypes.default.number,\n  bufferConfig: _propTypes.default.shape({\n    minBufferMs: _propTypes.default.number,\n    maxBufferMs: _propTypes.default.number,\n    bufferForPlaybackMs: _propTypes.default.number,\n    bufferForPlaybackAfterRebufferMs: _propTypes.default.number\n  }),\n  stereoPan: _propTypes.default.number,\n  rate: _propTypes.default.number,\n  pictureInPicture: _propTypes.default.bool,\n  playInBackground: _propTypes.default.bool,\n  playWhenInactive: _propTypes.default.bool,\n  ignoreSilentSwitch: _propTypes.default.oneOf(['ignore', 'obey']),\n  reportBandwidth: _propTypes.default.bool,\n  disableFocus: _propTypes.default.bool,\n  controls: _propTypes.default.bool,\n  audioOnly: _propTypes.default.bool,\n  currentTime: _propTypes.default.number,\n  fullscreenAutorotate: _propTypes.default.bool,\n  fullscreenOrientation: _propTypes.default.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: _propTypes.default.number,\n  useTextureView: _propTypes.default.bool,\n  hideShutterView: _propTypes.default.bool,\n  onLoadStart: _propTypes.default.func,\n  onLoad: _propTypes.default.func,\n  onBuffer: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onProgress: _propTypes.default.func,\n  onBandwidthUpdate: _propTypes.default.func,\n  onSeek: _propTypes.default.func,\n  onEnd: _propTypes.default.func,\n  onFullscreenPlayerWillPresent: _propTypes.default.func,\n  onFullscreenPlayerDidPresent: _propTypes.default.func,\n  onFullscreenPlayerWillDismiss: _propTypes.default.func,\n  onFullscreenPlayerDidDismiss: _propTypes.default.func,\n  onReadyForDisplay: _propTypes.default.func,\n  onPlaybackStalled: _propTypes.default.func,\n  onPlaybackResume: _propTypes.default.func,\n  onPlaybackRateChange: _propTypes.default.func,\n  onAudioFocusChanged: _propTypes.default.func,\n  onAudioBecomingNoisy: _propTypes.default.func,\n  onPictureInPictureStatusChanged: _propTypes.default.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: _propTypes.default.func,\n  onExternalPlaybackChange: _propTypes.default.func,\n  scaleX: _propTypes.default.number,\n  scaleY: _propTypes.default.number,\n  translateX: _propTypes.default.number,\n  translateY: _propTypes.default.number,\n  rotation: _propTypes.default.number\n}, _reactNative.ViewPropTypes);\nvar RCTVideo = (0, _reactNative.requireNativeComponent)('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"sources":["E:/projects/videoApp/Video.js"],"names":["styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","isNaN","Error","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","options","NativeModules","VideoManager","_root","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","androidFullScreen","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","audioOnly","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","getViewManagerConfig","viewManagerName","UIManager","poster","videoContainerLayout_x","videoContainerLayout_y","getDimension","Dimensions","get","width","height","Math","round","measure","_videoContainer","x","y","nativeProps","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","shouldCache","__packager_asset","uri","match","console","warn","isNetwork","isAsset","nativeResizeMode","RCTVideoInstance","VideoResizeMode","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","posterStyle","absoluteFillObject","posterResizeMode","videoStyle","position","top","left","backgroundColor","justifyContent","zIndex","marginTop","parseFloat","marginLeft","videoContainer","absoluteFill","Component","propTypes","filter","PropTypes","oneOf","FilterType","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","filterEnabled","bool","object","oneOfType","number","func","shape","string","minLoadRetryCount","maxBitRate","Image","repeat","automaticallyWaitsToMinimizeStalling","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","TextTrackType","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","ViewPropTypes","RCTVideo","nativeOnly"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyleSheet, requireNativeComponent, NativeModules, View, ViewPropTypes, Image, Platform, UIManager, findNodeHandle, Dimensions } from 'react-native';\r\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\r\nimport TextTrackType from './TextTrackType';\r\nimport FilterType from './FilterType';\r\nimport VideoResizeMode from './VideoResizeMode.js';\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  base: {\r\n    overflow: 'hidden',\r\n  },\r\n});\r\n\r\nexport { TextTrackType, FilterType };\r\n\r\nexport default class Video extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showPoster: !!props.poster,\r\n      androidFullScreen: false,\r\n      videoContainerLayout_x: 0,\r\n      videoContainerLayout_y: 0,\r\n    };\r\n    this.getDimension();\r\n  }\r\n\r\n  /**\r\n   * @description this is will set the width and height needs to be considered for full screen\r\n   */\r\n  getDimension() {\r\n    if (Dimensions.get('window').width < Dimensions.get('window').height) {\r\n      this.width = Math.round(Dimensions.get('window').height);\r\n      this.height = Math.round(Dimensions.get('window').width);\r\n    }\r\n    else {\r\n      this.width = Math.round(Dimensions.get('window').width);\r\n      this.height = Math.round(Dimensions.get('window').height);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    UIManager.measure(findNodeHandle(this._videoContainer), (x, y) => {\r\n      this.setState({\r\n        videoContainerLayout_x: x,\r\n        videoContainerLayout_y: y,\r\n      });\r\n    });\r\n  }\r\n\r\n  setNativeProps(nativeProps) {\r\n    this._root.setNativeProps(nativeProps);\r\n  }\r\n\r\n  toTypeString(x) {\r\n    switch (typeof x) {\r\n      case 'object':\r\n        return x instanceof Date\r\n          ? x.toISOString()\r\n          : JSON.stringify(x); // object, null\r\n      case 'undefined':\r\n        return '';\r\n      default: // boolean, number, string\r\n        return x.toString();\r\n    }\r\n  }\r\n\r\n  stringsOnlyObject(obj) {\r\n    const strObj = {};\r\n\r\n    Object.keys(obj).forEach(x => {\r\n      strObj[x] = this.toTypeString(obj[x]);\r\n    });\r\n\r\n    return strObj;\r\n  }\r\n\r\n  seek = (time, tolerance = 100) => {\r\n    if (isNaN(time)) {throw new Error('Specified time is not a number');}\r\n\r\n    if (Platform.OS === 'ios') {\r\n      this.setNativeProps({\r\n        seek: {\r\n          time,\r\n          tolerance,\r\n        },\r\n      });\r\n    } else {\r\n      this.setNativeProps({ seek: time });\r\n    }\r\n  };\r\n\r\n  presentFullscreenPlayer = () => {\r\n    this.setNativeProps({ fullscreen: true });\r\n  };\r\n\r\n  dismissFullscreenPlayer = () => {\r\n    this.setNativeProps({ fullscreen: false });\r\n  };\r\n\r\n  save = async (options?) => {\r\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\r\n  }\r\n\r\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\r\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\r\n  };\r\n\r\n  _assignRoot = (component) => {\r\n    this._root = component;\r\n  };\r\n\r\n  _hidePoster = () => {\r\n    if (this.state.showPoster) {\r\n      this.setState({ showPoster: false });\r\n    }\r\n  }\r\n\r\n  _onLoadStart = (event) => {\r\n    if (this.props.onLoadStart) {\r\n      this.props.onLoadStart(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onLoad = (event) => {\r\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\r\n    if (Platform.OS === 'windows') {\r\n      this._hidePoster();\r\n    }\r\n    if (this.props.onLoad) {\r\n      this.props.onLoad(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onError = (event) => {\r\n    if (this.props.onError) {\r\n      this.props.onError(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onProgress = (event) => {\r\n    if (this.props.onProgress) {\r\n      this.props.onProgress(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onBandwidthUpdate = (event) => {\r\n    if (this.props.onBandwidthUpdate) {\r\n      this.props.onBandwidthUpdate(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onSeek = (event) => {\r\n    if (this.props.onSeek) {\r\n      this.props.onSeek(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onEnd = (event) => {\r\n    if (this.props.onEnd) {\r\n      this.props.onEnd(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onTimedMetadata = (event) => {\r\n    if (this.props.onTimedMetadata) {\r\n      this.props.onTimedMetadata(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onFullscreenPlayerWillPresent = (event) => {\r\n    Platform.OS === 'android' && this.setState({ androidFullScreen: true });\r\n    if (this.props.onFullscreenPlayerWillPresent) {\r\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onFullscreenPlayerDidPresent = (event) => {\r\n    if (this.props.onFullscreenPlayerDidPresent) {\r\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onFullscreenPlayerWillDismiss = (event) => {\r\n    Platform.OS === 'android' && this.setState({ androidFullScreen: false });\r\n    if (this.props.onFullscreenPlayerWillDismiss) {\r\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onFullscreenPlayerDidDismiss = (event) => {\r\n    if (this.props.onFullscreenPlayerDidDismiss) {\r\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onReadyForDisplay = (event) => {\r\n    if (!this.props.audioOnly) {\r\n      this._hidePoster();\r\n    }\r\n\r\n    if (this.props.onReadyForDisplay) {\r\n      this.props.onReadyForDisplay(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onPlaybackStalled = (event) => {\r\n    if (this.props.onPlaybackStalled) {\r\n      this.props.onPlaybackStalled(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onPlaybackResume = (event) => {\r\n    if (this.props.onPlaybackResume) {\r\n      this.props.onPlaybackResume(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onPlaybackRateChange = (event) => {\r\n    if (this.props.onPlaybackRateChange) {\r\n      this.props.onPlaybackRateChange(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onExternalPlaybackChange = (event) => {\r\n    if (this.props.onExternalPlaybackChange) {\r\n      this.props.onExternalPlaybackChange(event.nativeEvent);\r\n    }\r\n  }\r\n\r\n  _onAudioBecomingNoisy = () => {\r\n    if (this.props.onAudioBecomingNoisy) {\r\n      this.props.onAudioBecomingNoisy();\r\n    }\r\n  };\r\n\r\n  _onPictureInPictureStatusChanged = (event) => {\r\n    if (this.props.onPictureInPictureStatusChanged) {\r\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\r\n    if (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\r\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\r\n    }\r\n  };\r\n\r\n  _onAudioFocusChanged = (event) => {\r\n    if (this.props.onAudioFocusChanged) {\r\n      this.props.onAudioFocusChanged(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  _onBuffer = (event) => {\r\n    if (this.props.onBuffer) {\r\n      this.props.onBuffer(event.nativeEvent);\r\n    }\r\n  };\r\n\r\n  getViewManagerConfig = viewManagerName => {\r\n    if (!NativeModules.UIManager.getViewManagerConfig) {\r\n      return NativeModules.UIManager[viewManagerName];\r\n    }\r\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\r\n  };\r\n\r\n  render() {\r\n    const resizeMode = this.props.resizeMode;\r\n    const source = resolveAssetSource(this.props.source) || {};\r\n    const shouldCache = !source.__packager_asset;\r\n\r\n    let uri = source.uri || '';\r\n    if (uri && uri.match(/^\\//)) {\r\n      uri = `file://${uri}`;\r\n    }\r\n\r\n    if (!uri) {\r\n      console.warn('Trying to load empty source.');\r\n    }\r\n\r\n    const isNetwork = !!(uri && uri.match(/^https?:/));\r\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\r\n\r\n    let nativeResizeMode;\r\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\r\n\r\n    if (resizeMode === VideoResizeMode.stretch) {\r\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\r\n    } else if (resizeMode === VideoResizeMode.contain) {\r\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\r\n    } else if (resizeMode === VideoResizeMode.cover) {\r\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\r\n    } else {\r\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\r\n    }\r\n\r\n    const nativeProps = Object.assign({}, this.props);\r\n    Object.assign(nativeProps, {\r\n      style: [styles.base, nativeProps.style],\r\n      resizeMode: nativeResizeMode,\r\n      src: {\r\n        uri,\r\n        isNetwork,\r\n        isAsset,\r\n        shouldCache,\r\n        type: source.type || '',\r\n        mainVer: source.mainVer || 0,\r\n        patchVer: source.patchVer || 0,\r\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {},\r\n      },\r\n      onVideoLoadStart: this._onLoadStart,\r\n      onVideoLoad: this._onLoad,\r\n      onVideoError: this._onError,\r\n      onVideoProgress: this._onProgress,\r\n      onVideoSeek: this._onSeek,\r\n      onVideoEnd: this._onEnd,\r\n      onVideoBuffer: this._onBuffer,\r\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\r\n      onTimedMetadata: this._onTimedMetadata,\r\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\r\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\r\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\r\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\r\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\r\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\r\n      onReadyForDisplay: this._onReadyForDisplay,\r\n      onPlaybackStalled: this._onPlaybackStalled,\r\n      onPlaybackResume: this._onPlaybackResume,\r\n      onPlaybackRateChange: this._onPlaybackRateChange,\r\n      onAudioFocusChanged: this._onAudioFocusChanged,\r\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\r\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\r\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\r\n    });\r\n\r\n    const posterStyle = {\r\n      ...StyleSheet.absoluteFillObject,\r\n      resizeMode: this.props.posterResizeMode || 'contain',\r\n    };\r\n\r\n    //androidFullScreen property will only impact on android. It will be always false for iOS.\r\n    const videoStyle = this.state.androidFullScreen ? {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: this.width,\r\n      height: this.height,\r\n      backgroundColor: '#ffffff',\r\n      justifyContent: 'center',\r\n      zIndex: 99999,\r\n      marginTop: -1 * (this.state.videoContainerLayout_y ? parseFloat(this.state.videoContainerLayout_y) : 0), //margin: 0 - is not working properly. So, updated all the margin individually with 0.\r\n      marginLeft: -1 * (this.state.videoContainerLayout_x ? parseFloat(this.state.videoContainerLayout_x) : 0),\r\n    } : {};\r\n\r\n    return (\r\n      <View ref={(videoContainer) => {\r\n        this._videoContainer = videoContainer;\r\n        return videoContainer;\r\n        }} style={[nativeProps.style, videoStyle]}>\r\n        <RCTVideo\r\n          ref={this._assignRoot}\r\n          {...nativeProps}\r\n          style={StyleSheet.absoluteFill}\r\n        />\r\n        {this.state.showPoster && (\r\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\r\n        )}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nVideo.propTypes = {\r\n  filter: PropTypes.oneOf([\r\n    FilterType.NONE,\r\n    FilterType.INVERT,\r\n    FilterType.MONOCHROME,\r\n    FilterType.POSTERIZE,\r\n    FilterType.FALSE,\r\n    FilterType.MAXIMUMCOMPONENT,\r\n    FilterType.MINIMUMCOMPONENT,\r\n    FilterType.CHROME,\r\n    FilterType.FADE,\r\n    FilterType.INSTANT,\r\n    FilterType.MONO,\r\n    FilterType.NOIR,\r\n    FilterType.PROCESS,\r\n    FilterType.TONAL,\r\n    FilterType.TRANSFER,\r\n    FilterType.SEPIA,\r\n  ]),\r\n  filterEnabled: PropTypes.bool,\r\n  /* Native only */\r\n  src: PropTypes.object,\r\n  seek: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.object,\r\n  ]),\r\n  fullscreen: PropTypes.bool,\r\n  onVideoLoadStart: PropTypes.func,\r\n  onVideoLoad: PropTypes.func,\r\n  onVideoBuffer: PropTypes.func,\r\n  onVideoError: PropTypes.func,\r\n  onVideoProgress: PropTypes.func,\r\n  onVideoBandwidthUpdate: PropTypes.func,\r\n  onVideoSeek: PropTypes.func,\r\n  onVideoEnd: PropTypes.func,\r\n  onTimedMetadata: PropTypes.func,\r\n  onVideoAudioBecomingNoisy: PropTypes.func,\r\n  onVideoExternalPlaybackChange: PropTypes.func,\r\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\r\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\r\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\r\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\r\n\r\n  /* Wrapper component */\r\n  source: PropTypes.oneOfType([\r\n    PropTypes.shape({\r\n      uri: PropTypes.string,\r\n    }),\r\n    // Opaque type returned by require('./video.mp4')\r\n    PropTypes.number,\r\n  ]),\r\n  minLoadRetryCount: PropTypes.number,\r\n  maxBitRate: PropTypes.number,\r\n  resizeMode: PropTypes.string,\r\n  poster: PropTypes.string,\r\n  posterResizeMode: Image.propTypes.resizeMode,\r\n  repeat: PropTypes.bool,\r\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\r\n  allowsExternalPlayback: PropTypes.bool,\r\n  selectedAudioTrack: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n  selectedVideoTrack: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n  selectedTextTrack: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number,\r\n    ]),\r\n  }),\r\n  textTracks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string,\r\n      uri: PropTypes.string.isRequired,\r\n      type: PropTypes.oneOf([\r\n        TextTrackType.SRT,\r\n        TextTrackType.TTML,\r\n        TextTrackType.VTT,\r\n      ]),\r\n      language: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  paused: PropTypes.bool,\r\n  muted: PropTypes.bool,\r\n  volume: PropTypes.number,\r\n  bufferConfig: PropTypes.shape({\r\n    minBufferMs: PropTypes.number,\r\n    maxBufferMs: PropTypes.number,\r\n    bufferForPlaybackMs: PropTypes.number,\r\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\r\n  }),\r\n  stereoPan: PropTypes.number,\r\n  rate: PropTypes.number,\r\n  pictureInPicture: PropTypes.bool,\r\n  playInBackground: PropTypes.bool,\r\n  playWhenInactive: PropTypes.bool,\r\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\r\n  reportBandwidth: PropTypes.bool,\r\n  disableFocus: PropTypes.bool,\r\n  controls: PropTypes.bool,\r\n  audioOnly: PropTypes.bool,\r\n  currentTime: PropTypes.number,\r\n  fullscreenAutorotate: PropTypes.bool,\r\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\r\n  progressUpdateInterval: PropTypes.number,\r\n  useTextureView: PropTypes.bool,\r\n  hideShutterView: PropTypes.bool,\r\n  onLoadStart: PropTypes.func,\r\n  onLoad: PropTypes.func,\r\n  onBuffer: PropTypes.func,\r\n  onError: PropTypes.func,\r\n  onProgress: PropTypes.func,\r\n  onBandwidthUpdate: PropTypes.func,\r\n  onSeek: PropTypes.func,\r\n  onEnd: PropTypes.func,\r\n  onFullscreenPlayerWillPresent: PropTypes.func,\r\n  onFullscreenPlayerDidPresent: PropTypes.func,\r\n  onFullscreenPlayerWillDismiss: PropTypes.func,\r\n  onFullscreenPlayerDidDismiss: PropTypes.func,\r\n  onReadyForDisplay: PropTypes.func,\r\n  onPlaybackStalled: PropTypes.func,\r\n  onPlaybackResume: PropTypes.func,\r\n  onPlaybackRateChange: PropTypes.func,\r\n  onAudioFocusChanged: PropTypes.func,\r\n  onAudioBecomingNoisy: PropTypes.func,\r\n  onPictureInPictureStatusChanged: PropTypes.func,\r\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\r\n  onExternalPlaybackChange: PropTypes.func,\r\n\r\n  /* Required by react-native */\r\n  scaleX: PropTypes.number,\r\n  scaleY: PropTypes.number,\r\n  translateX: PropTypes.number,\r\n  translateY: PropTypes.number,\r\n  rotation: PropTypes.number,\r\n  ...ViewPropTypes,\r\n};\r\n\r\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\r\n  nativeOnly: {\r\n    src: true,\r\n    seek: true,\r\n    fullscreen: true,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}